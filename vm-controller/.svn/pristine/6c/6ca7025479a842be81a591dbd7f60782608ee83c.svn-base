package appcloud.vmcontroller.util;import java.util.List;import appcloud.common.model.VmVirtualInterface;import appcloud.common.utils.Md5Tool;import appcloud.vmcontroller.VMControllerConf;public class VMCUtil {	//--------------------------工具方法：以后考虑单独放在util--------------------------------    /**     * 内存的单位转换，传入的是GB单位，传给libvirt配置文件的是B     * @param instanceMemory     * @return     */    public static long memUnitConvert(Integer instanceMemory) {    	long memory = instanceMemory * 1024 * 1024;    	return memory;    }        /**     * 去除UUID中的-，改为系统统一格式     * @param instanceUUID     * @return     */    public static String convertUUID(String instanceUUID) {    	return instanceUUID.replace("-", "");    }    /**     * 带宽的单位转换，传入的是Mb单位，传给libvirt配置文件的是Kb     * @param maxBandwidth     * @return     */    public static long bandwidthUnitConvert(Integer maxBandwidth) {    	long band = maxBandwidth * 1024 / 8;    	return band;    }        public static boolean isEmpty(Object obj) {        if (obj == null) {            return true;        } else if ("".equalsIgnoreCase(obj.toString())) {            return true;        } else {            return false;        }    }        /**     * 生成名称：vm     * @param UUID     * @param name     * @return     */    public static String generateName(String UUID, String name) {    	String newName = UUID + "-" + name;    	return newName;    }        /**     * 生成名称：security group     * @param UUID     * @param name     * @return     */    public static String generateName(String UUID) {        return UUID;    }	public static String getVNCPasswd(Integer id,String uuid,Integer userId) {		String passwd = id + uuid + userId;		return Md5Tool.getMd5(passwd);	}		public static VmVirtualInterface getPublicVif(List<VmVirtualInterface> vifs){	    for(VmVirtualInterface vif : vifs){	        if(vif.getNetworkType().equalsIgnoreCase("public")){	            return vif;	        }	    }        return null;	}}